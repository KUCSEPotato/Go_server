services:
  postgres:
    image: postgres:16
    container_name: locker-prod-pg
    environment:
      POSTGRES_DB: locker
      POSTGRES_USER: locker
      POSTGRES_PASSWORD: kuci_info_student_council_secure
    ports:
      - "5433:5432"  # 호스트:컨테이너 (외부에서는 5433으로 접근)
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U locker -d locker"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: locker-prod-redis
    command: redis-server --appendonly yes
    ports:
      - "6380:6379"  # 호스트:컨테이너 (외부에서는 6380으로 접근)
    volumes:
      - redis_data_prod:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: locker-prod-app
    env_file:
      - ../configs/.env.prod
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data_prod:
  redis_data_prod:

networks:
  default:
    name: locker-prod-network