basePath: /api/v1
definitions:
  handlers.ErrorResponse:
    properties:
      error:
        example: invalid credentials
        type: string
    type: object
  handlers.HoldSuccessResponse:
    properties:
      expires_in:
        example: 5 minutes
        type: string
      locker:
        $ref: '#/definitions/handlers.LockerResponse'
      message:
        example: locker held successfully
        type: string
    type: object
  handlers.ListLockersResponse:
    properties:
      available_count:
        example: 45
        type: integer
      lockers:
        items:
          $ref: '#/definitions/handlers.LockerResponse'
        type: array
    type: object
  handlers.ListUsersResponse:
    properties:
      count:
        example: 42
        type: integer
      users:
        items:
          $ref: '#/definitions/handlers.User'
        type: array
    type: object
  handlers.LockerResponse:
    properties:
      location_id:
        type: string
      locker_id:
        type: integer
      owner:
        description: null 가능
        type: string
    type: object
  handlers.LoginRequest:
    properties:
      name:
        type: string
      phone_number:
        type: string
      student_id:
        type: string
    type: object
  handlers.LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  handlers.LogoutRequest:
    properties:
      access_token:
        description: '선택적: 요청 body에서 받기'
        type: string
      refresh_token:
        description: 반납할 refresh token
        type: string
    type: object
  handlers.LogoutResponse:
    properties:
      message:
        type: string
    type: object
  handlers.MyLockerResponse:
    properties:
      locker:
        $ref: '#/definitions/handlers.LockerResponse'
    type: object
  handlers.RefreshRequest:
    properties:
      access_token:
        description: '선택적: 블랙리스트용'
        type: string
      refresh_token:
        type: string
    type: object
  handlers.RefreshResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  handlers.RegisterRequest:
    properties:
      name:
        type: string
      phone_number:
        type: string
      student_id:
        type: string
    type: object
  handlers.RegisterResponse:
    properties:
      message:
        type: string
      student_id:
        type: string
    type: object
  handlers.SimpleSuccessResponse:
    properties:
      message:
        example: operation completed successfully
        type: string
    type: object
  handlers.User:
    description: users 테이블의 한 레코드(민감정보 제외)
    properties:
      name:
        example: 홍길동
        type: string
      phone_number:
        example: "01012345678"
        type: string
      student_id:
        example: "2025320000"
        type: string
    type: object
info:
  contact: {}
  description: 사물함 선착순 예약 시스템의 백엔드 API 문서
  title: Locker Reservation API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: 일치하는 사용자가 있으면 Access/Refresh 토큰 발급, 전화번호란은 숫자만 허용
      parameters:
      - description: 로그인 정보
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: 로그인 (학번/이름/전화번호 확인)
      tags:
      - auth
  /auth/logout:
    post:
      consumes:
      - application/json
      description: 현재 사용 중인 Access Token과 Refresh Token을 모두 무효화합니다.
      parameters:
      - default: Bearer
        description: Bearer {access_token}
        in: header
        name: Authorization
        type: string
      - description: 로그아웃 정보 (선택적)
        in: body
        name: payload
        schema:
          $ref: '#/definitions/handlers.LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.LogoutResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: 로그아웃
      tags:
      - auth
  /auth/logout-all:
    post:
      consumes:
      - application/json
      description: 현재 사용자의 모든 Refresh Token을 무효화하여 모든 디바이스에서 로그아웃합니다.
      parameters:
      - default: Bearer
        description: Bearer {access_token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.LogoutResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: 전체 로그아웃 (모든 디바이스)
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh 토큰을 사용하여 새로운 Access 토큰을 발급합니다.
      parameters:
      - description: 토큰 갱신 요청 정보
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handlers.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.RefreshResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: 토큰 갱신
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: 새 사용자를 등록합니다. 학번은 중복될 수 없습니다. 전화번호란에는 숫자만 허용합니다.
      parameters:
      - description: 회원가입 정보
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handlers.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: 회원가입
      tags:
      - auth
  /health:
    get:
      consumes:
      - application/json
      description: 서버 상태 확인 (DB, Redis 연결 상태 포함)
      produces:
      - application/json
      responses:
        "200":
          description: 서버가 정상입니다
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 서버에 문제가 있습니다
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 헬스 체크
      tags:
      - health
  /lockers:
    get:
      consumes:
      - application/json
      description: 모든 사물함 목록과 사용 가능한 사물함 수를 반환합니다
      parameters:
      - default: Bearer
        description: Bearer {access_token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 사물함 목록과 사용 가능 수
          schema:
            $ref: '#/definitions/handlers.ListLockersResponse'
        "401":
          description: 인증 필요
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: 서버 오류
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: 사물함 목록 조회
      tags:
      - lockers
  /lockers/{id}/confirm:
    post:
      consumes:
      - application/json
      description: 선점한 사물함을 확정합니다 (실제 소유권 획득). hold 상태에서 confirmed 상태로 전환되며, 사물함의
        소유자로 등록됩니다.
      parameters:
      - default: Bearer
        description: Bearer {access_token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: 사물함 ID (선점한 사물함)
        example: 101
        in: path
        maximum: 999
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 확정 완료
          schema:
            $ref: '#/definitions/handlers.SimpleSuccessResponse'
        "400":
          description: 잘못된 요청 - 유효하지 않은 사물함 ID
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: 인증 필요 - JWT 토큰이 없거나 유효하지 않음
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "409":
          description: 선점이 만료되었거나 없음 - hold 상태가 아니거나 5분이 경과함
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: 서버 오류 - 데이터베이스 트랜잭션 실패
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: 사물함 확정
      tags:
      - lockers
  /lockers/{id}/hold:
    post:
      consumes:
      - application/json
      description: 특정 사물함을 선점합니다 (5분간 예약). Redis와 DB를 통해 동시성 제어를 하며, 성공 시 사물함 정보를
        반환합니다. 신청 기간 외에는 접근이 불가능합니다.
      parameters:
      - default: Bearer
        description: Bearer {access_token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: 사물함 ID (1-999 범위)
        example: 101
        in: path
        maximum: 999
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: 선점 성공 - 사물함 정보 포함
          schema:
            $ref: '#/definitions/handlers.HoldSuccessResponse'
        "400":
          description: 잘못된 요청 - 유효하지 않은 사물함 ID
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: 인증 필요 - JWT 토큰이 없거나 유효하지 않음
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "403":
          description: 신청 기간 외 - 신청 시작 전이거나 마감 후
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "409":
          description: 이미 선점됨 - 다른 사용자가 이미 선점했거나 본인이 이미 선점한 상태
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "503":
          description: 서비스 일시 불가 - Redis 서버 장애
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: 사물함 선점
      tags:
      - lockers
  /lockers/{id}/release:
    post:
      consumes:
      - application/json
      description: 확정된 사물함을 해제합니다 (소유권 포기). confirmed 상태에서 cancelled 상태로 전환되며, 사물함이
        다시 사용 가능해집니다.
      parameters:
      - default: Bearer
        description: Bearer {access_token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: 사물함 ID (소유한 사물함)
        example: 101
        in: path
        maximum: 999
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 해제 완료
          schema:
            $ref: '#/definitions/handlers.SimpleSuccessResponse'
        "400":
          description: 잘못된 요청 - 유효하지 않은 사물함 ID
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: 인증 필요 - JWT 토큰이 없거나 유효하지 않음
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: 사물함을 찾을 수 없음 - 소유하지 않은 사물함
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: 서버 오류 - 데이터베이스 트랜잭션 실패
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: 사물함 해제
      tags:
      - lockers
  /lockers/me:
    get:
      consumes:
      - application/json
      description: 현재 로그인한 사용자가 소유한 사물함 정보를 반환합니다. 소유한 사물함이 없으면 locker가 null로 반환됩니다.
      parameters:
      - default: Bearer
        description: Bearer {access_token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 내 사물함 정보 (없으면 locker가 null)
          schema:
            $ref: '#/definitions/handlers.MyLockerResponse'
        "401":
          description: 인증 필요 - JWT 토큰이 없거나 유효하지 않음
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: 서버 오류 - 데이터베이스 조회 실패
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: 내 사물함 조회
      tags:
      - lockers
  /users/GetAllUsers:
    get:
      description: users 테이블의 전체 유저를 조회하고, 총 개수도 함께 반환합니다.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.ListUsersResponse'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: 모든 유저 조회
      tags:
      - users
securityDefinitions:
  BearerAuth:
    description: Bearer {access_token}
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
