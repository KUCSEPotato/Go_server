// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login-or-register": {
            "post": {
                "description": "학번/이름/전화번호가 일치하면 로그인, 불일치하면 새로 회원가입 후 로그인.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "로그인 또는 자동 회원가입 (통합 인증)",
                "parameters": [
                    {
                        "description": "로그인/회원가입 정보",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginOrRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "기존 사용자 로그인 성공",
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginOrRegisterResponse"
                        }
                    },
                    "201": {
                        "description": "새 사용자 회원가입 및 로그인 성공",
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginOrRegisterResponse"
                        }
                    },
                    "400": {
                        "description": "invalid name length",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "현재 사용 중인 Access Token과 Refresh Token을 모두 무효화합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "로그아웃",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer",
                        "description": "Bearer {access_token}",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "로그아웃 정보",
                        "name": "payload",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/handlers.LogoutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.LogoutResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "description": "JWT 토큰을 통해 인증된 현재 사용자의 학번, 이름, 전화번호를 반환합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "현재 로그인된 사용자 정보 조회",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer",
                        "description": "Bearer {access_token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.GetMeResponse"
                        }
                    },
                    "401": {
                        "description": "unauthorized - invalid or missing token",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "user not found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Refresh 토큰을 사용하여 새로운 Access 토큰을 발급합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "토큰 갱신",
                "parameters": [
                    {
                        "description": "토큰 갱신 요청 정보",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.RefreshResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "서버 상태 확인 (DB, Redis 연결 상태 포함)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "헬스 체크",
                "responses": {
                    "200": {
                        "description": "서버가 정상입니다",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "서버에 문제가 있습니다",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/lockers": {
            "get": {
                "description": "모든 사물함 목록과 사용 가능한 사물함 수를 반환합니다",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lockers"
                ],
                "summary": "사물함 목록 조회",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer",
                        "description": "Bearer {access_token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "사물함 목록과 사용 가능 수",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListLockersResponse"
                        }
                    },
                    "401": {
                        "description": "인증 필요",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "서버 오류",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/lockers/me": {
            "get": {
                "description": "현재 로그인한 사용자가 소유한 사물함 정보를 반환합니다. 소유한 사물함이 없으면 locker가 null로 반환됩니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lockers"
                ],
                "summary": "내 사물함 조회",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer",
                        "description": "Bearer {access_token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "내 사물함 정보 (없으면 locker가 null)",
                        "schema": {
                            "$ref": "#/definitions/handlers.MyLockerResponse"
                        }
                    },
                    "401": {
                        "description": "인증 필요 - JWT 토큰이 없거나 유효하지 않음",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "서버 오류 - 데이터베이스 조회 실패",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/lockers/{id}/confirm": {
            "post": {
                "description": "선점한 사물함을 확정합니다 (실제 소유권 획득). hold 상태에서 confirmed 상태로 전환되며, 사물함의 소유자로 등록됩니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lockers"
                ],
                "summary": "사물함 확정",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer",
                        "description": "Bearer {access_token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "maximum": 999,
                        "minimum": 1,
                        "type": "integer",
                        "example": 101,
                        "description": "사물함 ID (선점한 사물함)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "확정 완료",
                        "schema": {
                            "$ref": "#/definitions/handlers.SimpleSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "잘못된 요청 - 유효하지 않은 사물함 ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "인증 필요 - JWT 토큰이 없거나 유효하지 않음",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "선점이 만료되었거나 없음 - hold 상태가 아니거나 5분이 경과함",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "서버 오류 - 데이터베이스 트랜잭션 실패",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/lockers/{id}/hold": {
            "post": {
                "description": "특정 사물함을 선점합니다 (1분간 예약). Redis와 DB를 통해 동시성 제어를 하며, 성공 시 사물함 정보를 반환합니다. 신청 기간 외에는 접근이 불가능합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lockers"
                ],
                "summary": "사물함 선점",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer",
                        "description": "Bearer {access_token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "maximum": 999,
                        "minimum": 1,
                        "type": "integer",
                        "example": 101,
                        "description": "사물함 ID (1-999 범위)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "선점 성공 - 사물함 정보 포함",
                        "schema": {
                            "$ref": "#/definitions/handlers.HoldSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "잘못된 요청 - 유효하지 않은 사물함 ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "인증 필요 - JWT 토큰이 없거나 유효하지 않음",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "신청 기간 외 - 신청 시작 전이거나 마감 후",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "이미 선점됨 - 다른 사용자가 이미 선점했거나 본인이 이미 선점한 상태",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "503": {
                        "description": "서비스 일시 불가 - Redis 서버 장애",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/lockers/{id}/release": {
            "post": {
                "description": "확정된 사물함을 해제합니다 (소유권 포기). confirmed 상태에서 cancelled 상태로 전환되며, 사물함이 다시 사용 가능해집니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lockers"
                ],
                "summary": "사물함 해제",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer",
                        "description": "Bearer {access_token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "maximum": 999,
                        "minimum": 1,
                        "type": "integer",
                        "example": 101,
                        "description": "사물함 ID (소유한 사물함)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "해제 완료",
                        "schema": {
                            "$ref": "#/definitions/handlers.SimpleSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "잘못된 요청 - 유효하지 않은 사물함 ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "인증 필요 - JWT 토큰이 없거나 유효하지 않음",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "사물함을 찾을 수 없음 - 소유하지 않은 사물함",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "서버 오류 - 데이터베이스 트랜잭션 실패",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/lockers/{id}/release-hold": {
            "post": {
                "description": "hold 상태인 사물함 예약을 취소합니다. 사물함이 다시 사용 가능해집니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "lockers"
                ],
                "summary": "사물함 hold 해제",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer",
                        "description": "Bearer {access_token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "maximum": 999,
                        "minimum": 1,
                        "type": "integer",
                        "example": 101,
                        "description": "사물함 ID (hold 상태의 사물함)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "hold 해제 완료",
                        "schema": {
                            "$ref": "#/definitions/handlers.SimpleSuccessResponse"
                        }
                    },
                    "400": {
                        "description": "잘못된 요청 - 유효하지 않은 사물함 ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "인증 필요 - JWT 토큰이 없거나 유효하지 않음",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "사물함을 찾을 수 없음 - hold 상태가 아님",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "서버 오류 - 데이터베이스 트랜잭션 실패",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/GetAllUsers": {
            "get": {
                "description": "users 테이블의 전체 유저를 조회하고, 총 개수도 함께 반환합니다.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "모든 유저 조회",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.ListUsersResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "invalid credentials"
                }
            }
        },
        "handlers.GetMeResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "student_id": {
                    "type": "string"
                }
            }
        },
        "handlers.HoldSuccessResponse": {
            "type": "object",
            "properties": {
                "expires_in": {
                    "type": "string",
                    "example": "1 minutes"
                },
                "locker": {
                    "$ref": "#/definitions/handlers.LockerResponse"
                },
                "message": {
                    "type": "string",
                    "example": "locker held successfully"
                }
            }
        },
        "handlers.ListLockersResponse": {
            "type": "object",
            "properties": {
                "available_count": {
                    "type": "integer",
                    "example": 45
                },
                "lockers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.LockerResponse"
                    }
                }
            }
        },
        "handlers.ListUsersResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "example": 42
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.User"
                    }
                }
            }
        },
        "handlers.LockerResponse": {
            "type": "object",
            "properties": {
                "location_id": {
                    "type": "string"
                },
                "locker_id": {
                    "type": "integer"
                },
                "owner": {
                    "description": "null 가능",
                    "type": "string"
                },
                "owner_serial_id": {
                    "type": "integer"
                }
            }
        },
        "handlers.LoginOrRegisterRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "student_id": {
                    "type": "string"
                }
            }
        },
        "handlers.LoginOrRegisterResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "serial_id": {
                    "type": "integer"
                }
            }
        },
        "handlers.LogoutRequest": {
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "선택적: 요청 body에서 받기",
                    "type": "string"
                },
                "refresh_token": {
                    "description": "반납할 refresh token",
                    "type": "string"
                }
            }
        },
        "handlers.LogoutResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handlers.MyLockerResponse": {
            "type": "object",
            "properties": {
                "locker": {
                    "$ref": "#/definitions/handlers.LockerResponse"
                }
            }
        },
        "handlers.RefreshRequest": {
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "선택적: 블랙리스트용",
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "handlers.RefreshResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "handlers.SimpleSuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "operation completed successfully"
                }
            }
        },
        "handlers.User": {
            "description": "users 테이블의 한 레코드(민감정보 제외)",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "홍길동"
                },
                "phone_number": {
                    "type": "string",
                    "example": "01012345678"
                },
                "serial_id": {
                    "type": "integer",
                    "example": 1234567890
                },
                "student_id": {
                    "type": "string",
                    "example": "2025320000"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Bearer {access_token}",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Locker Reservation API",
	Description:      "사물함 선착순 예약 시스템의 백엔드 API 문서",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
